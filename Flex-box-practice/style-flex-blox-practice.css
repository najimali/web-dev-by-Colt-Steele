/* All the direct children inside the flex-container such us flex-item 1 or 2 or 3 will be affected by flex properties */
/* parent - flex-container
child - flex-item */
.flex-container {
    /* by default flex direction is horizontal  */
    display: flex;
    background-color: blue;
    
    /* justify-content - Children will be align on the main axis */
    /* justify-content: space-evenly; */
    /* for cross axis we use align-items: & default it is stretch if you can see we assign min height to each item
    different but they are stretch to 250 px i.e because of default value of align items*/
    /* align-items: center; */
    /* if multiple flex-item are present & flex-item(child)width is 50% or more but flex-item will not take 50% i.e happening because flex-wrap default value is nowrap 
     so change the flex-wrap to wrap then flex-item(child) will take 50% 
     if second item cannot be adjust in the same row then it will be shifted to next line

    */
    /* flex-wrap: wrap; */
    /* To move the entire group in the cross axis then we use align-content:; */
    /* align-content: space-around;
    height: 95vh; */

    /* flex-direction: column; */
    justify-content: space-evenly;
    /* align-items: flex-end; */
    /* flex-flow is combination of flex flow & flex wrap  */
    /* Applying properties to child ,properties will be directly written on child container check .item 1 or 2 or 3  */

}

.flex-item {
    /* background-color: orange; */
    background: orange;
    color: white;
    width: 15%;
    /* To give gap betweeen two adajcament element we use margin  */
    margin: 10px;
    /* TO move internal item inside the border we use padding  */
    padding: 20px;
    border: 2px solid black;
    font-size: 2em;

    /* to align content of each item we can use flex for children also
     */
     display: flex;
     justify-content: center;
    align-items: center;
}

.item-1 {
    min-height: 20px;
    /* flex-grow flex-shrink flex-basis shortcut is flex  ; */
    flex: 1 1 25%;
    /* to change the order of children without changing in html we use order  */
   order:2;
}

.item-2 {
    min-height: 100px;
    flex: 1 1 25%;
    order:3;
}

.item-3 {
    min-height: 250px;
    flex: 1 1 25%;
    order:1;
}

/* .main-axis{
    position: center;
    width: 100%;
    border:3px solid yellow;
    
} */